<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chd.modules.system.mapper.SysUserMapper">

	<!-- 根据用户名查询 -->
	<select id="getUserByName" resultType="com.chd.modules.system.entity.SysUser">
		select * from  sys_user  where username = #{username} and del_flag = 0
	</select>

	<!-- 根据部门Id查询 -->
	<select id="getUserByDepId" resultType="com.chd.modules.system.entity.SysUser">
		select * from sys_user where del_flag = 0 and id in (select user_id from sys_user_depart where dep_id=#{departId})
		<if test="username!=null and username!=''">
			and username = #{username}
		</if>
	</select>

	<!-- 查询用户的所属部门名称信息 -->
	<select id="getDepNamesByUserIds" resultType="com.chd.modules.system.vo.SysUserDepVo">
		select d.depart_name,ud.user_id from sys_user_depart ud,sys_depart d where d.id = ud.dep_id and ud.user_id in
		<foreach collection="userIds" index="index" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</select>

	<!-- 通过多个部门IDS，查询部门下的用户信息 -->
	<select id="getUserByDepIds" resultType="com.chd.modules.system.entity.SysUser">
		select * from sys_user where del_flag = 0
		<if test="departIds!=null  and departIds.size()>0">
			and id in (select user_id from sys_user_depart where dep_id in
			<foreach collection="departIds" index="index" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
			)
		</if>
		<if test="username!=null and username!=''">
			and username = #{username}
		</if>
	</select>

	<!-- 根据角色Id查询 -->
	<select id="getUserByRoleId" resultType="com.chd.modules.system.entity.SysUser">
		select * from sys_user where del_flag = 0 and id in (select user_id from sys_user_role where role_id=#{roleId})
		<if test="username!=null and username!=''">
			and username = #{username}
		</if>
	</select>

	<!--  修改用户部门code -->
	<update id="updateUserDepart">
		UPDATE sys_user SET org_code = #{orgCode} where username = #{username}
	</update>

	<!-- 根据手机号查询 -->
	<select id="getUserByPhone"  resultType="com.chd.modules.system.entity.SysUser">
		select * from  sys_user  where phone = #{phone} and del_flag = 0
	</select>

	<!-- 根据邮箱查询用户信息 -->
	<select id="getUserByEmail" resultType="com.chd.modules.system.entity.SysUser">
	select * from  sys_user  where email = #{email} and del_flag = 0
	</select>

	<!-- SQL片段：getUserByOrgCode 的 FROM 和 WHERE 部分 -->
	<sql id="getUserByOrgCodeFromSql">
		FROM
		sys_depart
		INNER JOIN sys_user_depart ON sys_user_depart.dep_id = sys_depart.id
		INNER JOIN sys_user ON sys_user.id = sys_user_depart.user_id
		WHERE
		<if test="orgCode == null">
			<bind name="bindOrgCode" value="'%'"/>
		</if>
		<if test="orgCode != null">
			<bind name="bindOrgCode" value="orgCode+'%'"/>
		</if>
		sys_user.del_flag = 0 AND sys_depart.org_code LIKE #{bindOrgCode}

		<if test="userParams != null">
			<if test="userParams.realname != null and userParams.realname != ''">
				AND sys_user.realname LIKE concat(concat('%',#{userParams.realname}),'%')
			</if>
			<if test="userParams.workNo != null and userParams.workNo != ''">
				AND sys_user.work_no LIKE concat(concat('%',#{userParams.workNo}),'%')
			</if>
		</if>
	</sql>

	<!-- 根据 orgCode 查询用户，包括子部门下的用户 -->
	<select id="getUserByOrgCode" resultType="com.chd.modules.system.model.SysUserSysDepartModel">
		SELECT
			sys_user.id AS id,
			sys_user.realname AS realname,
			sys_user.avatar AS avatar,
			sys_user.work_no AS workNo,
			sys_user.post AS post,
			sys_user.telephone AS telephone,
			sys_user.email AS email,
			sys_user.phone AS phone,
			sys_depart.id AS departId,
			sys_depart.depart_name AS departName
		<include refid="getUserByOrgCodeFromSql"/>
		ORDER BY
			sys_depart.org_code ASC
	</select>

	<!-- 查询 getUserByOrgCode 的总数-->
	<select id="getUserByOrgCodeTotal" resultType="java.lang.Integer">
		SELECT COUNT(1) <include refid="getUserByOrgCodeFromSql"/>
	</select>

	<!-- 批量删除角色的与用户关系-->
	<update id="deleteBathRoleUserRelation">
		delete from sys_user_role
		where role_id in
		<foreach item="id" collection="roleIdArray" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	<!-- 批量删除角色的与权限关系-->
	<update id="deleteBathRolePermissionRelation">
		delete from sys_role_permission
		where role_id in
		<foreach item="id" collection="roleIdArray" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<!-- 查询被逻辑删除的用户 -->
	<select id="selectLogicDeleted" resultType="com.chd.modules.system.entity.SysUser">
		SELECT * FROM sys_user ${ew.customSqlSegment}
	</select>

	<!-- 更新被逻辑删除的用户 -->
	<update id="revertLogicDeleted">
		UPDATE
			sys_user
		SET
			del_flag = 0,
			update_by = #{entity.updateBy},
			update_time = #{entity.updateTime}
		WHERE
			del_flag = 1
			AND id IN (${userIds})
	</update>

	<!-- 彻底删除被逻辑删除的用户 -->
	<delete id="deleteLogicDeleted">
		DELETE FROM sys_user WHERE del_flag = 1 AND id IN (${userIds})
	</delete>

    <!-- 更新空字符串为null -->
    <update id="updateNullByEmptyString">
        UPDATE sys_user SET ${fieldName} = NULL WHERE ${fieldName} = ''
    </update>

	<!-- 通过多个部门IDS，查询部门下的用户信息 -->
	<select id="queryByDepIds" resultType="com.chd.modules.system.entity.SysUser">
		select * from sys_user where del_flag = 0
		<if test="departIds!=null  and departIds.size()>0">
			and id in (select user_id from sys_user_depart where dep_id in
			<foreach collection="departIds" index="index" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
			)
		</if>
		<if test="username!=null and username!=''">
			and username != #{username}
		</if>
	</select>


	<select id="selectSysUserPageVo" parameterType="map" resultType="com.chd.modules.system.entity.SysUser">
		SELECT su.*
		FROM sys_user su
		<where>
			<if test="map.id!= null "> and su.id = #{map.id}</if>
			<if test="map.username!= null "> and su.username = #{map.username}</if>
			<if test="map.usernameLike!= null "> and su.username LIKE #{map.usernameLike}</if>
			<if test="map.realname!= null "> and su.realname = #{map.realname}</if>
			<if test="map.realnameLike!= null "> and su.realname LIKE #{map.realnameLike}</if>

			<if test="map.password!= null "> and su.password = #{map.password}</if>
			<if test="map.salt!= null "> and su.salt = #{map.salt}</if>
			<if test="map.avatar!= null "> and su.avatar = #{map.avatar}</if>
			<if test="map.birthday!= null "> and su.password = #{map.birthday}</if>
			<if test="map.sex!= null "> and su.sex = #{map.sex}</if>


			<if test="map.email!= null "> and su.email = #{map.email}</if>
			<if test="map.phone!= null "> and su.phone = #{map.phone}</if>
			<if test="map.orgCode!= null "> and su.org_code = #{map.orgCode}</if>
			<if test="map.status!= null "> and su.status = #{map.status}</if>
			<if test="map.delFlag!= null "> and su.del_flag = #{map.delFlag}</if>
			<if test="map.thirdId!= null "> and su.third_id = #{map.thirdId}</if>


			<if test="map.thirdType!= null "> and su.third_type = #{map.thirdType}</if>


			<if test="map.activitiSync!= null "> and su.activiti_sync = #{map.activitiSync}</if>
			<if test="map.workNo!= null "> and su.work_no = #{map.workNo}</if>
			<if test="map.post!= null "> and su.post = #{map.post}</if>
			<if test="map.telephone!= null "> and su.telephone = #{map.telephone}</if>
			<if test="map.createBy!= null "> and su.create_by = #{map.createBy}</if>


			<if test="map.createTime!= null "> and su.create_time = #{map.createTime}</if>
			<if test="map.updateBy!= null "> and su.update_by = #{map.updateBy}</if>
			<if test="map.updateTime!= null "> and su.update_time = #{map.updateTime}</if>
			<if test="map.userIdentity!= null "> and su.user_identity = #{map.userIdentity}</if>
			<if test="map.departIds!= null "> and su.depart_ids = #{map.departIds}</if>
			<if test="map.relTenantIds!= null "> and su.rel_tenant_ids = #{map.relTenantIds}</if>
			<if test="map.clientId!= null "> and su.client_id = #{map.clientId}</if>
			<if test="map.hdmyUserId!= null "> and su.hdmy_user_id = #{map.hdmyUserId}</if>
			<if test="map.hdmyOrgId!= null "> and su.hdmy_org_id = #{map.hdmyOrgId}</if>



		</where>

		ORDER BY su.report_time DESC
	</select>


</mapper>
